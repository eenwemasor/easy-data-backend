"A datetime string with format `Y-m-d H:i:s`, e.g. `2018-01-01 13:00:00`."
scalar DateTime
@scalar(class: "Nuwave\\Lighthouse\\Schema\\Types\\Scalars\\DateTime")

"A date string with format `Y-m-d`, e.g. `2011-05-23`."
scalar Date @scalar(class: "Nuwave\\Lighthouse\\Schema\\Types\\Scalars\\Date")

type Query {
    users: [User!]! @paginate(defaultCount: 10)
    user(id: ID @eq): User @find

    data_transaction(id: ID @eq): DataTransaction @find
    cable_transaction(id: ID @eq): CableTransaction @find
    airtime_transaction(id: ID @eq): AirtimeTransaction @find
    electricity_transaction(id: ID @eq): ElectricityTransaction @find

    userUniqueID(unique_id: ID @eq): User @find
    getAdminChannelUtil(id: ID @eq): AdminChannelUtil @find
    me: User @middleware(checks: ["auth:api"]) @auth
    getCablePlanList(
        cable: String! @where(operator: "=")
    ): [CablePlanList!]! @all
    getDataPlanList(
        network: String! @where(operator: "=")
    ): [DataPlanList!]! @all

    getAllDataPlanList: [DataPlanList!]! @all
    getAllCablePlanList: [CablePlanList!]! @all
    getAllPowerPlanList: [PowerPlanList!]! @all

    getAirtimeTransactions(user_id: ID! @eq orderBy: [OrderByClause!] @orderBy): [AirtimeTransaction!]! @paginate(type: "paginator" model: "App\\AirtimeTransaction")
    getWalletTransactions(user_id: ID! @eq orderBy: [OrderByClause!] @orderBy): [WalletTransaction!]! @paginate(type: "paginator" model: "App\\WalletTransaction")
    getDataTransactions(user_id: ID! @eq orderBy: [OrderByClause!] @orderBy): [DataTransaction!]! @paginate(type: "paginator" model: "App\\DataTransaction")
    getCableTransactions(user_id: ID! @eq orderBy: [OrderByClause!] @orderBy): [CableTransaction!]! @paginate(type: "paginator" model: "App\\CableTransaction")
    getElectricityTransactions(user_id: ID! @eq orderBy: [OrderByClause!] @orderBy): [ElectricityTransaction!]! @paginate(type: "paginator" model: "App\\ElectricityTransaction")
}

#import inputs/*.graphql
#import models/*.graphql
#import mutations/*.graphql


type Mutation {
    # This mutation is just here so the graphql schema can be properly compiled, please define an actual correct mutation for your application
    registereUser(id: ID!): User! @create
}


input OrderByClause {
    field: String!
    order: SortOrder!
}

enum SortOrder {
    ASC
    DESC
}

enum TransactionStatus{
    SENT
    PROCESSING
    COMPLETED
    FAILED
}